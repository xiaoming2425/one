package cn.wewintech.work.print.controller;

import java.util.List;
import java.util.Map;

import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.ui.Model;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import cn.wewintech.work.print.domain.PrintPaperDO;
import cn.wewintech.work.print.service.PrintPaperService;
import cn.wewintech.common.domain.SeqNoName;
import cn.wewintech.common.service.DictService;
import cn.wewintech.common.service.SeqnoService;
import cn.wewintech.common.utils.PageUtils;
import cn.wewintech.common.utils.Query;
import cn.wewintech.common.utils.ResultObject;
import cn.wewintech.common.utils.ShiroUtils;
import cn.wewintech.project.project.domain.ProjectDO;
import cn.wewintech.project.project.service.ProjectService;

/**
 * 打图申请
 * 
 * @author 
 * @email 
 * @date 2020-06-04 09:57:59
 */
 
@Controller
@RequestMapping("/work/printPaper")
public class PrintPaperController {
	@Autowired
	private PrintPaperService printPaperService;
	@Autowired
	private ProjectService projectService;
	@Autowired
	private DictService dictService;
	@Autowired
	private SeqnoService seqNoService;
	
	@GetMapping()
	@RequiresPermissions("work:printPaper:printPaper")
	String PrintPaper(){
	    return "work/printPaper/printPaper";
	}
	
	@ResponseBody
	@GetMapping("/list")
	@RequiresPermissions("work:printPaper:printPaper")
	public PageUtils list(@RequestParam Map<String, Object> params){
		//查询列表数据
        Query query = new Query(params);
		List<PrintPaperDO> printPaperList = printPaperService.list(query);
		int total = printPaperService.count(query);
		PageUtils pageUtils = new PageUtils(printPaperList, total);
		return pageUtils;
	}
	
	@GetMapping("/openProject")
	@RequiresPermissions("work:printPaper:printPaper")
	public String openProject(Model model) {
		return "work/printPaper/openProject";
	}
	
	
	
	@ResponseBody
	@GetMapping("/openProjectList")
	@RequiresPermissions("work:printPaper:printPaper")
	public PageUtils openProjectList(@RequestParam Map<String, Object> params){
		//查询列表数据
        Query query = new Query(params);
		List<ProjectDO> projectList = projectService.list(query);
		for (ProjectDO projectDO : projectList) {
			projectDO.setProjectResource(dictService.findNameByValueAndType(projectDO.getProjectResource(), "project_resource"));
			projectDO.setProjectType(dictService.findNameByValueAndType(projectDO.getProjectType(), "project_type"));
			projectDO.setAuditState(dictService.findNameByValueAndType(projectDO.getAuditState(), "audit_state"));
		}
		int total = projectService.count(query);
		PageUtils pageUtils = new PageUtils(projectList, total);
		return pageUtils;
	}
	
	@GetMapping("/add")
	@RequiresPermissions("work:printPaper:add")
	String add(Model model){
		String nextId = this.seqNoService.nextId(SeqNoName.REINSURANCE_NO_001.getCode());
		model.addAttribute("workCode", nextId);	
		String projectManager = ShiroUtils.getUser().getName();
		model.addAttribute("applyUser", projectManager);
	    return "work/printPaper/add";
	}

	@GetMapping("/edit/{id}")
	@RequiresPermissions("work:printPaper:edit")
	String edit(@PathVariable("id") String id,Model model){
		PrintPaperDO printPaper = printPaperService.get(id);
		model.addAttribute("printPaper", printPaper);
	    return "work/printPaper/edit";
	}
	
	/**
	 * 保存
	 */
	@ResponseBody
	@PostMapping("/save")
	@RequiresPermissions("work:printPaper:add")
	public ResultObject save( PrintPaperDO printPaper){
		if(printPaperService.save(printPaper)>0){
			return ResultObject.ok();
		}
		return ResultObject.error();
	}
	/**
	 * 修改
	 */
	@ResponseBody
	@RequestMapping("/update")
	@RequiresPermissions("work:printPaper:edit")
	public ResultObject update( PrintPaperDO printPaper){
		printPaperService.update(printPaper);
		return ResultObject.ok();
	}
	
	/**
	 * 删除
	 */
	@PostMapping( "/remove")
	@ResponseBody
	@RequiresPermissions("work:printPaper:remove")
	public ResultObject remove( String id){
		if(printPaperService.remove(id)>0){
		return ResultObject.ok();
		}
		return ResultObject.error();
	}
	
	/**
	 * 删除
	 */
	@PostMapping( "/batchRemove")
	@ResponseBody
	@RequiresPermissions("work:printPaper:batchRemove")
	public ResultObject remove(@RequestParam("ids[]") String[] ids){
		printPaperService.batchRemove(ids);
		return ResultObject.ok();
	}
	
}
